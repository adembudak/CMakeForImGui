name: GitHub Actions
run-name: ${{ github.actor }} is testing out ${{ github.repository }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE.md'

jobs:
  Configure-Build:
    strategy:
      matrix:
          os:
            - ubuntu-latest
            - macos-15
            - windows-latest

          include:
            - os: ubuntu-latest
              generator: 'Unix Makefiles'
              triplet: x64-linux

            - os: macos-15
              generator: 'Ninja Multi-Config'
              triplet: x64-osx

            - os: windows-latest
              generator: 'Visual Studio 17 2022'
              triplet: x64-windows

          tag:
            - v1.92.1
            - v1.92.0
            - v1.91.9
            - v1.91.8
            - v1.91.7
            - v1.91.6
            - v1.91.5
            - v1.91.4
            - v1.91.3

          build-type:
            - Debug

    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Triggered by ${{ github.event_name }} on ${{ github.repository }} using ${{ github.ref}} branch and running on ${{ runner.os }}."

      - name: ls
        run: |
          pwd
          ls ${{ github.workspace }}

      - name: Install required packages on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install --assume-yes --fix-missing libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config libltdl-dev

      - name: Install required packages on MacOS
        if: matrix.os == 'macos-15'
        run: |
          brew install ninja
          brew install --cask xquartz

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '4.0.0'

      - name: CMake version
        run: cmake --version

      - name: Check out ImGui repository
        uses: actions/checkout@v4
        with:
          repository: ocornut/imgui
          show-progress: false
          ref: ${{ matrix.tag }}
          path: imgui

      - name: Check out CMakeForImGui
        uses: actions/checkout@v4
        with:
          path: CMakeForImGui

      - name: Setup vcpkg
        uses: johnwason/vcpkg-action@v7
        id: vcpkg
        with:
          manifest-dir: ${{ github.workspace }}/CMakeForImGui/.github/workflows
          triplet: ${{ matrix.triplet }}
          token: ${{ github.token }}

      - name: Configure
        run: >
          cmake
          -G "${{ matrix.generator }}"
          -D VCPKG_MANIFEST_MODE=ON
          -D VCPKG_MANIFEST_DIR=${{ github.workspace }}/CMakeForImGui/.github/workflows
          -D IMGUI_SOURCE_DIR=${{ github.workspace }}/imgui
          -D misc=ON -D misc_freetype=ON -D misc_cpp=ON -D misc_debugger=ON -D misc_fonts=ON
          -D pkg-config=ON
          -D allegro5=ON
          -D glut=ON
          -D glfw=ON
          -D opengl2=ON
          -D opengl3=ON
          -D vulkan=ON
          -D sdl2=ON
          -D sdlrenderer2=ON
          -D sdl3=ON
          -D sdlrenderer3=ON
          -D sdlgpu3=ON
          -D examples=ON
          -D example_null=ON
          -D example_glfw_opengl2=ON -D example_glfw_opengl3=ON -D example_glfw_vulkan=ON
          -D example_sdl2_opengl2=ON -D example_sdl2_opengl3=ON -D example_sdl2_vulkan=ON
          -D example_sdl3_opengl3=ON -D example_sdl3_vulkan=ON
          -D example_sdl3_sdlgpu3=ON
          -D example_sdl2_sdlrenderer2=ON
          -D example_sdl3_sdlrenderer3=ON
          -D example_glut_opengl2=ON
          -D example_allegro5=OFF
          -S ${{ github.workspace }}/CMakeForImGui
          -B ${{ github.workspace }}/build
          --toolchain ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Extra configurations for Windows
        if: matrix.os == 'windows-latest'
        run: >
          cmake
          -D win32=ON
          -D dx9=ON
          -D dx10=ON
          -D dx11=ON
          -D dx12=ON
          -D example_win32_opengl3=ON
          -D example_win32_vulkan=ON
          -D example_win32_directx9=ON
          -D example_win32_directx10=ON
          -D example_win32_directx11=ON
          -D example_win32_directx12=ON
          -D example_sdl2_directx11=ON
          -S ${{ github.workspace }}/CMakeForImGui
          -B ${{ github.workspace }}/build
          --toolchain ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: >
          cmake
          --build ${{ github.workspace }}/build
          --config ${{ matrix.build-type }}

      - name: Get build artifacts
        uses: actions/upload-artifact@v4

        with:
          name: build.imgui-${{ matrix.tag }}.${{ matrix.os }}.${{ matrix.triplet }}.${{ matrix.build-type }}
          path: ${{ github.workspace }}/build/

      - run: echo "Job exited by ${{ job.status }}."

