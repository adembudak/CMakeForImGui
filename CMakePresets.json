{
  "$schema": "https://cmake.org/cmake/help/latest/_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json",
  "version": 10,
  "cmakeMinimumRequired": {
    "major": 4,
    "minor": 0,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "assume_imgui_is_there",
      "hidden": true,
      "$comment": "Assume Dear ImGui is present and in ${sourceDir}/imgui/ folder for more smooth first time usage experience",
      "cacheVariables": {
        "IMGUI_SOURCE_DIR": "imgui"
      }
    },
    {
      "name": "build_requirements",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_STANDARD": "11",
        "CMAKE_CXX_STANDARD_REQUIRED": "TRUE"
      }
    },
    {
      "name": "tooling",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "visualize_targets": "OFF",
        "Install": "ON",
        "Install_examples": "ON",
        "Uninstall": "ON",
        "Pkg-config": "ON",
        "PrintConfigurationSummary": "ON"
      }
    },
    {
      "name": "imconfig_h",
      "hidden": true,
      "cacheVariables": {
        "IMGUI_DISABLE_OBSOLETE_FUNCTIONS": "OFF",
        "IMGUI_DISABLE": "OFF",
        "IMGUI_DISABLE_DEMO_WINDOWS": "OFF",
        "IMGUI_DISABLE_DEBUG_TOOLS": "OFF",
        "IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS": "OFF",
        "IMGUI_ENABLE_WIN32_DEFAULT_IME_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_WIN32_FUNCTIONS": "OFF",
        "IMGUI_ENABLE_OSX_DEFAULT_CLIPBOARD_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_DEFAULT_SHELL_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_DEFAULT_FORMAT_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_DEFAULT_MATH_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_FILE_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_DEFAULT_FILE_FUNCTIONS": "OFF",
        "IMGUI_DISABLE_DEFAULT_ALLOCATORS": "OFF",
        "IMGUI_DISABLE_DEFAULT_FONT": "OFF",
        "IMGUI_DISABLE_SSE": "OFF",
        "IMGUI_ENABLE_TEST_ENGINE": "OFF",
        "IMGUI_INCLUDE_IMGUI_USER_H": "OFF",
        "IMGUI_USE_BGRA_PACKED_COLOR": "OFF",
        "IMGUI_USE_LEGACY_CRC32_ADLER": "OFF",
        "IMGUI_USE_WCHAR32": "OFF",
        "IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION": "OFF",
        "IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION": "OFF",
        "IMGUI_DISABLE_STB_SPRINTF_IMPLEMENTATION": "OFF",
        "IMGUI_USE_STB_SPRINTF": "OFF",
        "IMGUI_ENABLE_FREETYPE": "OFF",
        "IMGUI_ENABLE_FREETYPE_PLUTOSVG": "OFF",
        "IMGUI_ENABLE_FREETYPE_LUNASVG": "OFF",
        "IMGUI_ENABLE_STB_TRUETYPE": "OFF",
        "IMGUI_DEFINE_MATH_OPERATORS": "OFF",
        "IMGUI_DEBUG_HIGHLIGHT_ALL_ID_CONFLICTS": "OFF",
        "IMGUI_DEBUG_PARANOID": "OFF"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_MANIFEST_MODE": "ON",
        "VCPKG_MANIFEST_DIR": "${sourceDir}"
      },
      "toolchainFile": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
    },
    {
      "name": "backends",
      "hidden": true,
      "cacheVariables": {
        "DearImGui_Backend_Allegro5": "ON",
        "DearImGui_Backend_FreeGLUT": "ON",
        "DearImGui_Backend_GLFW": "ON",
        "DearImGui_Backend_OpenGL2": "ON",
        "DearImGui_Backend_OpenGL3": "ON",
        "DearImGui_Backend_Vulkan": "ON",
        "DearImGui_Backend_SDL2": "ON",
        "DearImGui_Backend_SDLRenderer2": "ON",
        "DearImGui_Backend_SDL3": "ON",
        "DearImGui_Backend_SDLGPU3": "ON",
        "DearImGui_Backend_SDLRenderer3": "ON",
        "DearImGui_Backend_WebGPU": "OFF"
      }
    },
    {
      "name": "examples",
      "hidden": true,
      "cacheVariables": {
        "Example_NULL": "ON",
        "Example_GLFW_OpenGL2": "ON",
        "Example_GLFW_OpenGL3": "ON",
        "Example_GLFW_Vulkan": "ON",
        "Example_GLFW_Metal": "ON",
        "Example_GLFW_WebGPU": "OFF",
        "Example_SDL2_OpenGL2": "ON",
        "Example_SDL2_OpenGL3": "ON",
        "Example_SDL2_Vulkan": "ON",
        "Example_SDL2_Metal": "ON",
        "Example_SDL3_OpenGL3": "ON",
        "Example_SDL3_Vulkan": "ON",
        "Example_SDL3_Metal": "ON",
        "Example_SDL3_SDLGPU3": "ON",
        "Example_SDL2_SDLRenderer2": "ON",
        "Example_SDL3_SDLRenderer3": "ON",
        "Example_FreeGLUT_OpenGL2": "ON",
        "Example_Allegro5": "ON"
      }
    },
    {
      "name": "Android",
      "binaryDir": "build",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h"
      ],
      "cacheVariables": {
        "DearImGui_Backend_Android": "ON",
        "DearImGui_Backend_OpenGL3": "ON",
        "Example_Android_OpenGL3": "ON"
      },
      "toolchainFile": "$env{ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake"
    },
    {
      "name": "Core",
      "displayName": "Just the core library, no backends",
      "description": "Just the core library, no backends",
      "binaryDir": "build",
      "generator": "Ninja Multi-Config",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling"
      ]
    },
    {
      "name": "Darwin",
      "generator": "Xcode",
      "binaryDir": "build",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling",
        "vcpkg",
        "backends",
        "examples"
      ],
      "cacheVariables": {
        "DearImGui_Backend_Metal": "ON",
        "DearImGui_Backend_OSX": "ON",
        "Example_Apple_OpenGL2": "ON",
        "Example_Apple_Metal": "ON"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "Default",
      "displayName": "Backends without platform dependencies, like Metal or DirectX",
      "description": "Backends without platform dependencies, like Metal or DirectX",
      "binaryDir": "build",
      "generator": "Ninja Multi-Config",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling",
        "vcpkg",
        "backends",
        "examples"
      ]
    },
    {
      "name": "Emscripten",
      "binaryDir": "build",
      "generator": "Ninja Multi-Config",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling"
      ],
      "cacheVariables": {
        "DearImGui_Backend_SDL2": "ON",
        "DearImGui_Backend_GLFW": "ON",
        "DearImGui_Backend_WebGPU": "ON",
        "DearImGui_Backend_OpenGL3": "ON",

        "Example_GLFW_WebGPU": "ON",
        "Example_GLFW_OpenGL3": "ON",
        "Example_SDL2_OpenGL3": "ON"
      },
      "$comment": "EMSCRIPTEN env variable must be defined and also must be on the PATH and it points to where Emscripten compiler is. If it's installed with emsdk, EMSCRIPTEN is $env{EMSDK}/upstream/emscripten/ (EMSDK envrironment variable is defined when: '$ emsdk activate latest' command is run",
      "toolchainFile": "$env{EMSCRIPTEN}/cmake/Modules/Platform/Emscripten.cmake"
    },
    {
      "name": "Linux",
      "binaryDir": "build",
      "generator": "Unix Makefiles",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling",
        "vcpkg",
        "backends",
        "examples"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "Windows",
      "binaryDir": "build",
      "generator": "Visual Studio 17 2022",
      "inherits": [
        "assume_imgui_is_there",
        "imconfig_h",
        "build_requirements",
        "tooling",
        "vcpkg",
        "backends",
        "examples"
      ],
      "cacheVariables": {
        "DearImGui_Backend_Win32": "ON",
        "DearImGui_Backend_DirectX9": "ON",
        "DearImGui_Backend_DirectX10": "ON",
        "DearImGui_Backend_DirectX11": "ON",
        "DearImGui_Backend_DirectX12": "ON",
        "Example_Win32_OpenGL3": "ON",
        "Example_Win32_Vulkan": "ON",
        "Example_Win32_DirectX9": "ON",
        "Example_Win32_DirectX10": "ON",
        "Example_Win32_DirectX11": "ON",
        "Example_Win32_DirectX12": "ON",
        "Example_SDL2_DirectX11": "ON"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "Android",
      "configurePreset": "Android",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true
    },
    {
      "name": "Core",
      "configurePreset": "Core",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true
    },
    {
      "name": "Darwin",
      "configurePreset": "Darwin",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "Default",
      "configurePreset": "Default",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true
    },
    {
      "name": "Emscripten",
      "configurePreset": "Emscripten",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true
    },
    {
      "name": "Linux",
      "configurePreset": "Linux",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true,
      "nativeToolOptions": [
        "--jobs=4",
        "--load-average=4"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "Windows",
      "configurePreset": "Windows",
      "inheritConfigureEnvironment": true,
      "cleanFirst": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    }
  ],
  "workflowPresets": [
    {
      "name": "Android",
      "steps": [
        {
          "type": "configure",
          "name": "Android"
        },
        {
          "type": "build",
          "name": "Android"
        }
      ]
    },
    {
      "name": "Core",
      "steps": [
        {
          "type": "configure",
          "name": "Core"
        },
        {
          "type": "build",
          "name": "Core"
        }
      ]
    },
    {
      "name": "Darwin",
      "steps": [
        {
          "type": "configure",
          "name": "Darwin"
        },
        {
          "type": "build",
          "name": "Darwin"
        }
      ]
    },
    {
      "name": "Default",
      "steps": [
        {
          "type": "configure",
          "name": "Default"
        },
        {
          "type": "build",
          "name": "Default"
        }
      ]
    },
    {
      "name": "Emscripten",
      "steps": [
        {
          "type": "configure",
          "name": "Emscripten"
        },
        {
          "type": "build",
          "name": "Emscripten"
        }
      ]
    },
    {
      "name": "Linux",
      "steps": [
        {
          "type": "configure",
          "name": "Linux"
        },
        {
          "type": "build",
          "name": "Linux"
        }
      ]
    },
    {
      "name": "Windows",
      "steps": [
        {
          "type": "configure",
          "name": "Windows"
        },
        {
          "type": "build",
          "name": "Windows"
        }
      ]
    }
  ]
}
